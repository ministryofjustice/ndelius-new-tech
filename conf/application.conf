# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile

app.version="0.2."

# sbt playGenerateSecret
play.http.secret.key=${?APPLICATION_SECRET}

play.http.context="/"
play.http.context=${?BASE_PATH}

# this app runs inside an iframe therefore this must not be set for Chrome to work
play.http.session.sameSite=null

play.logger.includeConfigProperties=true

http.port=${?PORT}

app.log.directory="./"
app.log.directory=${?APP_LOG_DIRECTORY}

app.log.name="application.log"
app.log.name=${?APP_LOG_NAME}

pdf.generator.url="http://localhost:8080/"  # Default value unless replaced by
pdf.generator.url=${?PDF_GENERATOR_URL}     # the environment variable here

store.alfresco.url="http://localhost:8080/alfresco/service/"
store.alfresco.url=${?STORE_ALFRESCO_URL}

store.alfresco.user="alfrescoUser"
store.alfresco.user=${?STORE_ALFRESCO_USER}

# 'alfresco' or 'mongo' provides an AlfrescoStore or MongoDocumentStore respectivly
store.provider="alfresco"
store.provider=${?STORE_PROVIDER}

params.secret.key="ThisIsASecretKey"
params.secret.key=${?PARAMS_SECRET_KEY}

params.user.token.valid.duration="1h"
params.user.token.valid.duration=${?PARAMS_USER_TOKEN_VALID_DURATION}

analytics.mongo.connection="mongodb://localhost"
analytics.mongo.connection=${?ANALYTICS_MONGO_CONNECTION}

analytics.mongo.database="analytics"
analytics.mongo.database=${?ANALYTICS_MONGO_DATABASE}

analytics.mongo.collection="events"
analytics.mongo.collection=${?ANALYTICS_MONGO_COLLECTION}

elastic.search.host="localhost"
elastic.search.host=${?ELASTIC_SEARCH_HOST}

elastic.search.port=9200
elastic.search.port=${?ELASTIC_SEARCH_PORT}

elastic.search.scheme="https"
elastic.search.scheme=${?ELASTIC_SEARCH_SCHEME}

offender.api.url="http://localhost:8080/api/"
offender.api.url=${?DELIUS_API_BASE_URL}
offender.api.probationAreas.cache.time.seconds=3600
offender.api.probationAreas.cache.time.seconds=${?DELIUS_API_AREA_CACHE_TIME}

# 'delius' or 'stub' provides a DeliusOffenderApi or StubOffenderApi respectivly
offender.api.provider="delius"
offender.api.provider=${?OFFENDER_API_PROVIDER}

prisoner.api.provider="legacy"
prisoner.api.provider=${?PRISONER_API_PROVIDER}

custody.api.token.cache.time.seconds=3599
custody.api.auth.username=""
custody.api.auth.username=${?CUSTODY_API_USERNAME}
custody.api.auth.password=""
custody.api.auth.password=${?CUSTODY_API_PASSWORD}

nomis.api.url="http://localhost:8080/api/"
nomis.api.url=${?NOMIS_API_BASE_URL}

nomis.payload.token="NomisPayloadToken"
nomis.payload.token=${?NOMIS_PAYLOAD_TOKEN}

nomis.private.key="NomisPrivateKey"
nomis.private.key=${?NOMIS_PRIVATE_KEY}

ldap.string.format="cn=%s,cn=Users,dc=moj,dc=com"
ldap.string.format=${?LDAP_STRING_FORMAT}

auth.feedback.user="feedback.user"
auth.feedback.user=${?AUTH_FEEDBACK_USER}

auth.feedback.password="changeit"
auth.feedback.password=${?AUTH_FEEDBACK_PASSWORD}

maintenance.offender.search=false
maintenance.offender.search=${?MAINTENANCE_OFFENDER_SEARCH}

recent.search.minutes=10
recent.search.minutes=${?RECENT_SEARCH_MINUTES}

google.analytics.id="UA-122274748-2"
google.analytics.id=${?GOOGLE_ANALYTICS_ID}

feedback.form.url="https://www.google.com"
feedback.form.url=${?FEEDBACK_FORM_URL}