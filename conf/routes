# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /healthcheck                                controllers.UtilityController.healthcheck(detail: Boolean ?= false)
GET     /utility/searchDb                           controllers.UtilityController.searchDb
GET     /utility/searchLdap                         controllers.UtilityController.searchLdap
+ nocsrf
POST    /api/logon                                  controllers.UtilityController.apiLogon
GET     /api/*url                                   controllers.UtilityController.apiCall(url)

GET     /nationalSearch                             controllers.NationalSearchController.index(user: String, t: String)
GET     /searchOffender/:searchTerm                 controllers.NationalSearchController.searchOffender(searchTerm, searchType: String, areasFilter: java.util.Optional[String], pageSize: Int ?=10, pageNumber: Int ?=1)
GET     /nationalSearch/analytics                   controllers.NationalSearchAnalyticsController.index
GET     /nationalSearch/analytics/filterCounts      controllers.NationalSearchAnalyticsController.filterCounts(from: String ?= null)
GET     /nationalSearch/analytics/uniqueUserVisits                  controllers.NationalSearchAnalyticsController.uniqueUserVisits(from: String ?= null)
GET     /nationalSearch/analytics/allVisits                         controllers.NationalSearchAnalyticsController.allVisits(from: String ?= null)
GET     /nationalSearch/analytics/allSearches                       controllers.NationalSearchAnalyticsController.allSearches(from: String ?= null)
GET     /nationalSearch/analytics/rankGrouping                      controllers.NationalSearchAnalyticsController.rankGrouping(from: String ?= null)
GET     /nationalSearch/analytics/durationBetweenStartEndSearch     controllers.NationalSearchAnalyticsController.durationBetweenStartEndSearch(from: String ?= null)
GET     /nationalSearch/analytics/eventOutcome                      controllers.NationalSearchAnalyticsController.eventOutcome(from: String ?= null)
GET     /nationalSearch/analytics/searchFieldMatch                  controllers.NationalSearchAnalyticsController.searchFieldMatch(from: String ?= null)
GET     /nationalSearch/analytics/userAgentTypeCounts               controllers.NationalSearchAnalyticsController.userAgentTypeCounts(from: String ?= null)
GET     /nationalSearch/analytics/searchTypeCounts      controllers.NationalSearchAnalyticsController.searchTypeCounts(from: String ?= null)
GET     /nationalSearch/satisfaction                controllers.FeedbackController.viewSatisfaction
GET     /nationalSearch/analytics/satisfaction      controllers.NationalSearchAnalyticsController.satisfaction
GET     /feedback                                   controllers.FeedbackController.viewNationalSearchFeedback
GET     /feedback/nationalSearch                    controllers.FeedbackController.viewNationalSearchFeedback
GET     /feedback/sfpsr                             controllers.FeedbackController.viewSfpsrFeedback

GET     /offender/oneTimeNomisRef/:reference/image  controllers.OffenderController.image(reference: String)
GET     /offender/detail                            controllers.OffenderController.detail
GET     /offender/registrations                     controllers.OffenderController.registrations

GET     /report/shortFormatPreSentenceReport        controllers.ShortFormatPreSentenceReportController.wizardGet
POST    /report/shortFormatPreSentenceReport        controllers.ShortFormatPreSentenceReportController.wizardPost
POST    /report/shortFormatPreSentenceReport/save   controllers.ShortFormatPreSentenceReportController.reportPost
GET     /report/shortFormatPreSentenceReport/get    controllers.ShortFormatPreSentenceReportController.getPdf(documentId: String, onBehalfOfUser: String)

GET     /report/paroleParom1Report                      controllers.ParoleParom1ReportController.wizardGet
POST    /report/paroleParom1Report                      controllers.ParoleParom1ReportController.wizardPost
POST    /report/paroleParom1Report/save                 controllers.ParoleParom1ReportController.reportPost
GET     /report/paroleParom1Report/get                  controllers.ParoleParom1ReportController.getPdf(documentId: String, onBehalfOfUser: String)
GET     /report/analyticsTester                        controllers.ParoleParom1ReportController.analyticsTester

GET     /offenderSummary                             controllers.OffenderSummaryController.index(offenderId: String, user: java.util.Optional[String], t: java.util.Optional[String])
GET     /features                                    controllers.FeaturesController.index()


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                           controllers.Assets.versioned(path="/public", file: Asset)
->      /webjars                                webjars.Routes
